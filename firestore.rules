rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      // Users can read their own profile and write to it.
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Users can manage their own list of personal chats.
      match /personalChats/{otherUserId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /chats/{roomId} {
      // Users can read chat metadata if they are authenticated.
      // This is safe because sensitive info is in subcollections.
      allow read: if request.auth != null;

      // Users can only update/create a chat document if it's a personal chat they are part of,
      // or if they are just updating the timestamp on any chat.
      allow write: if request.auth != null &&
        (request.auth.uid in resource.data.users || request.resource.data.keys().hasOnly(['lastMessageTimestamp', 'lastMessage', 'lastMessageSenderId', 'isPersonal', 'users']));
    }
    
    match /chats/{roomId}/messages/{messageId} {
      // Users can read messages in a public chat (isPersonal == false)
      // OR in a private chat they are a member of.
      allow read: if request.auth != null && (
        get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false ||
        request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users
      );
      
      // Users can write messages if they are authenticated and the message is theirs.
      allow write: if request.auth != null && request.resource.data.user.id == request.auth.uid;
    }

    // This rule is specifically for the Admin Dashboard's collectionGroup query on 'messages'.
    match /{path=**}/messages/{messageId} {
        // Admins are allowed to read from the 'messages' collection group.
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /requirements/{requirementId} {
      // Any authenticated user can read requirements.
      allow read: if request.auth != null;

      // Only backend functions can create requirements.
      allow create: if false;

      // Only admins can update or delete requirements.
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /offers/{offerId} {
      // Any authenticated user can read offers.
      allow read: if request.auth != null;

      // Only admins can write (create, update, delete) offers.
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
