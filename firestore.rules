rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthed() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthed() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthed() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read any profile, but only write to their own (or if admin)
    match /users/{userId} {
      allow read: if isAuthed();
      allow create: if isOwner(userId);
      allow update, delete: if isOwner(userId) || isAdmin();

      // Users can only access their own personal chat list
      match /personalChats/{otherUserId} {
        allow read, list: if isOwner(userId);
        allow create, update, delete: if isOwner(userId);
      }
    }

    // Chat rooms
    match /chats/{roomId}/{document=**} {
      // Allow read access to messages if the user is part of the personal chat room
      allow read: if roomId.split('_').includes(request.auth.uid) 
                  // Or if it's a public state chat (not a personal one)
                  || !roomId.contains('_'); 
      
      // Write access is more restrictive
      allow write: if isAdmin() 
                  // Allow writing to personal chats they are part of
                  || roomId.split('_').includes(request.auth.uid)
                  // Allow writing to their own state chat
                  || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.state == roomId;
    }
    
    // Flagged content for AI training
    match /flagged_content/{docId} {
        allow read: if isAuthed(); // Any authenticated user can read for moderation checks
        allow write: if isAdmin(); // Only admins can write
    }

    // Logs for inappropriate messages
    match /inappropriate_logs/{docId} {
        allow read, write: if isAdmin(); // Only admins
    }
    
    // Offers can be read by anyone, but only modified by admins
    match /offers/{offerId} {
        allow read: if true;
        allow write: if isAdmin();
    }
  }
}
