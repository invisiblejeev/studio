rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    match /chats/{roomId} {
        // Allow reading the chat document only for members of a personal chat
        allow read: if request.auth.uid in resource.data.users;
        // Allow writes (for updating timestamps) by members of the chat
        allow write: if request.auth.uid in resource.data.users;
    }

    match /chats/{roomId}/messages/{messageId} {
        // Read is allowed if:
        // 1. It's a public chat (roomId does not contain '_') AND the user is authenticated.
        // 2. It's a private chat AND the user is a member of that chat.
        allow read: if (!roomId.matches('.*_.*') && request.auth != null) || (get(/databases/$(database)/documents/chats/$(roomId)).data.users[0] == request.auth.uid || get(/databases/$(database)/documents/chats/$(roomId)).data.users[1] == request.auth.uid);
        
        // Write is allowed if the user is authenticated and the message is theirs.
        allow create: if request.auth.uid == request.resource.data.user.id;
        allow update, delete: if request.auth.uid == resource.data.user.id;
    }

    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Allow authenticated users to create
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}