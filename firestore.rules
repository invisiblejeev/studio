rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if a user is a member of a personal chat
    function isPersonalChatMember(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
    }

    // Users can only read/write their own profile, but anyone can query the list to check for duplicates.
    match /users/{userId} {
      allow get: if request.auth != null;
      allow list: if true; // Allow checking for username/email availability before sign-in
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
      allow delete: if request.auth.uid == userId;

      // Users can only manage their own personal chat metadata
      match /personalChats/{otherUserId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Public state-based chat rooms
    match /chats/{state} {
      // Any authenticated user can read the room doc and its messages
      allow read: if request.auth != null;
      
      match /messages/{messageId} {
        allow read: if request.auth != null;
        // User must be the author to create/update their message
        allow create: if request.auth.uid == request.resource.data.user.id;
        allow update: if request.auth.uid == resource.data.user.id;
      }
    }

    // Personal one-on-one chat rooms
    match /personalChats/{roomId} {
        // Allow read/write only if the user is a member of the chat
        allow read, write: if isPersonalChatMember(roomId);
        
        match /messages/{messageId} {
            // Allow read only if the user is a member of the chat
            allow read: if isPersonalChatMember(roomId);
            // Allow create/update only if the user is the author and a member.
            allow create: if isPersonalChatMember(roomId) && request.auth.uid == request.resource.data.user.id;
            allow update: if isPersonalChatMember(roomId) && request.auth.uid == resource.data.user.id;
        }
    }

    // Requirements can be read by anyone, but only created/modified by the author or an admin
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.user.id;
      allow update, delete: if request.auth.uid == resource.data.user.id || isAdmin();
    }
    
    // Offers can be read by anyone, but only written by admins
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
