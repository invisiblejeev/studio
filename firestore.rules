
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can only read their own profile, but anyone can view a profile (for avatars, usernames etc).
    // Users can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Users can only read their own list of personal chats.
    match /users/{userId}/personalChats/{otherUserId} {
        allow read: if request.auth.uid == userId;
        allow write: if request.auth.uid == userId;
    }

    // Rules for chat rooms and their messages
    match /chats/{roomId} {
      // Allow read/write access to the chat document itself (for things like lastMessage)
      // using the same logic as the messages subcollection.
      allow read, write: if request.auth != null && (
            !resource.data.isPersonal ||
            request.auth.uid in resource.data.users
      );
    }
    
    match /chats/{roomId}/messages/{messageId} {
      // A user can read a message if:
      // 1. They are authenticated AND it's a public chat (isPersonal is not true)
      // OR
      // 2. They are a member of that specific private chat room.
      allow read: if request.auth != null && (
          !get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal ||
          request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users
      );

      // A user can write a message if they are authenticated and the message is from them.
      allow write: if request.auth != null && request.resource.data.user.id == request.auth.uid;
    }

    // Requirements can be read by anyone authenticated.
    // They can only be created by server-side logic (triggers).
    // They can only be updated or deleted by an admin.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if false; // Deny client-side creation
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Offers can be read by anyone authenticated.
    // They can only be written (created, updated, deleted) by an admin.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
