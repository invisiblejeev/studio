
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    function isAuth() {
      return request.auth != null;
    }

    // USER PROFILES
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isAuth() && request.auth.uid == userId;
    }
    
    // USER'S PERSONAL CHAT METADATA
    match /users/{userId}/personalChats/{otherUserId} {
        allow read, write: if isAuth() && request.auth.uid == userId;
    }

    // PUBLIC CHATS (STATE-BASED)
    match /chats/{stateId} {
        allow read, write: if isAuth();

        match /messages/{messageId} {
            allow read: if isAuth();
            allow create: if isAuth() && request.resource.data.user.id == request.auth.uid;
            allow update, delete: if isAuth() && resource.data.user.id == request.auth.uid;
        }
    }

    // PERSONAL CHATS
    match /personalChats/{roomId} {
        allow read, write: if isAuth() && request.auth.uid in resource.data.members;

        match /messages/{messageId} {
             // A user can read messages if they are a member of the parent chat room.
            allow read: if isAuth() && get(/databases/$(database)/documents/personalChats/$(roomId)).data.members[0] == request.auth.uid || get(/databases/$(database)/documents/personalChats/$(roomId)).data.members[1] == request.auth.uid;
            // A user can create a message if they are the author.
            // The read rule on the parent room already protects this.
            allow create: if isAuth() && request.resource.data.user.id == request.auth.uid;
            // A user can update/delete their own message.
            allow update, delete: if isAuth() && resource.data.user.id == request.auth.uid;
        }
    }
    
    // REQUIREMENTS
    match /requirements/{requirementId} {
      allow read, create: if isAuth();
      allow update, delete: if isAuth() && (resource.data.user.id == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // OFFERS
    match /offers/{offerId} {
        allow read: if isAuth();
        allow write: if isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
