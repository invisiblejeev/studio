rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper Functions
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isChatMember(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users;
    }
    
    function isPublicChat(roomId) {
      return get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false;
    }

    // User profiles can be read by any authenticated user,
    // but only the user themselves can write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isUser(userId);
      
      // A user can only access their own personal chat list.
      match /personalChats/{chatId} {
        allow read, write: if isUser(userId);
      }
    }

    // Chat rooms
    match /chats/{roomId} {
      allow read: if isPublicChat(roomId) || isChatMember(roomId);
      allow create: if request.auth != null; // Allow any authenticated user to initiate a chat
      allow update: if isChatMember(roomId); // Only members can update the last message

      // Messages in a chat room
      match /messages/{messageId} {
        allow read: if isPublicChat(roomId) || isChatMember(roomId);
        allow create: if isChatMember(roomId); // Only members can send messages
        allow update: if request.auth.uid == resource.data.user.id; // Only the author can edit their message
        allow delete: never; // Use soft deletes via update
      }
    }

    // Requirements can be read by anyone, but only created by authenticated users.
    // Only the author or an admin can update/delete.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.user.id || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Offers can be read by anyone, but only written by admins.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
