rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == userId;
    }

    match /chats/{roomId} {
        // Allow reads only for private chats where user is a member.
        // Public chat documents (`/chats/california`) are not directly read by the client.
        allow read: if resource.data.isPersonal == true && request.auth.uid in resource.data.users;
        // Allow creating/updating chat document metadata (like last message) by any authenticated user.
        allow write: if request.auth.uid != null;
    }

    match /chats/{roomId}/messages/{messageId} {
        // For public chats (no '_'), allow any authenticated user to read/write.
        // For private chats (contains '_'), only allow users who are part of the chat.
        allow read, write: if request.auth.uid != null && (
                            !roomId.contains('_') || request.auth.uid in roomId.split('_')
                         );
        // Allow a user to delete (update to soft-delete) their own message.
        allow update: if request.auth.uid == resource.data.user.id;
    }
    
    match /requirements/{requirementId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    match /offers/{offerId} {
      allow read: if request.auth.uid != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
