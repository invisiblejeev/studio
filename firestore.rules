
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwnRecord(userId) {
      return request.auth.uid == userId;
    }

    function isChatMember(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
    }
    
    // USERS
    // /users/{userId}
    match /users/{userId} {
      // Any authenticated user can query the collection to check for duplicates
      allow list: if isUserAuthenticated();
      // Any authenticated user can read a user profile
      allow get: if isUserAuthenticated();
      // A user can create their own profile document
      allow create: if isOwnRecord(userId);
      // A user can only update their own profile
      allow update: if isOwnRecord(userId);
      // A user can only delete their own profile
      allow delete: if isOwnRecord(userId);

        // PERSONAL CHAT METADATA
        // /users/{userId}/personalChats/{otherUserId}
        match /personalChats/{otherUserId} {
            // A user can only manage their own list of personal chats
            allow read, write: if isOwnRecord(userId);
        }
    }

    // CHATS (Public)
    // /chats/{state}
    match /chats/{state} {
      // Any authenticated user can read/write to public state chats
      allow read, write: if isUserAuthenticated();

        // MESSAGES (Public)
        // /chats/{state}/messages/{messageId}
        match /messages/{messageId} {
            // Any authenticated user can read public messages
            allow read: if isUserAuthenticated();
            // A user can only create a message if they are authenticated
            allow create: if isUserAuthenticated() && request.resource.data.user.id == request.auth.uid;
            // A user can only update/delete their own messages
            allow update: if isUserAuthenticated() && resource.data.user.id == request.auth.uid;
        }
    }
    
    // PERSONAL CHATS
    // /personalChats/{roomId}
    match /personalChats/{roomId} {
        allow get: if isUserAuthenticated() && isChatMember(roomId);
        allow create, update: if isUserAuthenticated();
        
        // MESSAGES (Personal)
        // /personalChats/{roomId}/messages/{messageId}
        match /messages/{messageId} {
            // A user can read a message if they are a member of the chat
            allow read: if isUserAuthenticated() && isChatMember(roomId);
            // A user can create a message if they are a member of the chat
            allow create: if isUserAuthenticated() && isChatMember(roomId) && request.resource.data.user.id == request.auth.uid;
            // A user can only update/delete their own messages
            allow update: if isUserAuthenticated() && resource.data.user.id == request.auth.uid && isChatMember(roomId);
        }
    }
    
    // REQUIREMENTS
    // /requirements/{reqId}
    match /requirements/{reqId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated() && request.resource.data.user.id == request.auth.uid;
        allow update, delete: if isUserAuthenticated() && (resource.data.user.id == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // OFFERS
    // /offers/{offerId}
    match /offers/{offerId} {
        allow read: if isUserAuthenticated();
        allow write: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
