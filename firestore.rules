rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // =============================================
    // Users
    // Users can read/update their own profile.
    // Any authenticated user can list users for checks like "is username taken"
    // = a user can create their own user document after signing up.
    // =============================================
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow create: if request.auth.uid == userId;
    }
    // This is required for checking if a username is taken, and for member counts.
    match /users/{document=**} {
    	allow list: if request.auth.uid != null;
    }

    // =============================================
    // Chats & Messages
    // Defines rules for both public state rooms and private user-to-user rooms.
    // =============================================
    match /chats/{roomId}/{documents=**} {
    	// PUBLIC CHATS (e.g., /chats/california)
      // Anyone authenticated can read/write to public state chats.
      // The roomID is the state name and does not contain an underscore.
    	allow read, write: if request.auth.uid != null && !roomId.matches('.*_.*');
      
      // PERSONAL CHATS (e.g., /chats/uid1_uid2)
      // Only the two users involved in a personal chat can read/write messages.
      // The roomId is a combination of two uids, separated by an underscore.
      allow read, write: if request.auth.uid != null && roomId.matches('.*_.*') && request.auth.uid in roomId.split("_");
    }
    
    // =============================================
    // Offers & Requirements
    // Any authenticated user can read.
    // Only admins can create, update, or delete.
    // =============================================
    match /{collectionName}/{docId} where collectionName in ['offers', 'requirements'] {
      allow read: if request.auth.uid != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // =============================================
    // Admin Functionality
    // Allows admins to query across all message collections to find spam.
    // =============================================
     match /{path=**}/messages/{message} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
