
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isChatMember(roomId) {
      let chatDoc = get(/databases/$(database)/documents/personalChats/$(roomId));
      return isAuth() && request.auth.uid in chatDoc.data.members;
    }
    
    // User Profiles
    match /users/{userId} {
      allow get: if isAuth();
      allow list: if true; // Allows username/email availability check before signup
      allow create: if request.auth.uid == userId;
      allow update, delete: if isOwner(userId);

      match /personalChats/{otherUserId} {
          allow read, write: if isOwner(userId);
      }
    }

    // Public Chat Rooms
    match /chats/{state} {
        allow read, create, update: if isAuth();

        match /messages/{messageId} {
            allow read, create: if isAuth();
            // User can only edit/delete their own messages.
            allow update, delete: if isAuth() && request.auth.uid == resource.data.user.id;
        }
    }

    // Personal Chat Rooms
    match /personalChats/{roomId} {
        allow get: if isChatMember(roomId);
        // User must be one of the two members to create the room.
        allow create: if isAuth() && (request.auth.uid == request.resource.data.members[0] || request.auth.uid == request.resource.data.members[1]);

        match /messages/{messageId} {
            allow read, create: if isChatMember(roomId);
            allow update, delete: if isAuth() && request.auth.uid == resource.data.user.id;
        }
    }

    // Requirements Collection
    match /requirements/{reqId} {
        allow read, create: if isAuth();
        allow update, delete: if isAuth() && (resource.data.user.id == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }

    // Offers Collection
    match /offers/{offerId} {
        allow read: if isAuth();
        // Only admins can create, update, or delete offers.
        allow write: if isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
