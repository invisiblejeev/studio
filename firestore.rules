
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile (for profile popups), but only write to their own.
    // Anyone can list users to check for unique usernames/emails during signup.
    match /users/{userId} {
      allow read, list: if request.auth != null;
      allow create, update, delete: if request.auth.uid == userId;
    }

    // Admins can manage offers. All authenticated users can read them.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Any authenticated user can create a requirement (via the cloud function trigger).
    // Admins can manage all requirements.
    match /requirements/{reqId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null; // Allows the server-side trigger to write
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for chat rooms and their subcollections.
    match /chats/{roomId} {
      // Allow read/write access to the chat document itself (for updating timestamps, etc.)
      allow read, write: if request.auth != null;

      // Rules for messages within a chat room.
      match /messages/{messageId} {
        // For public state-based chats (e.g., 'california'), any authenticated user can read/write.
        // For private chats (e.g., 'uid1_uid2'), only the participants can read/write.
        allow read, write: if request.auth != null && (
          (roomId.contains('_') && (request.auth.uid in roomId.split('_'))) ||
          !roomId.contains('_')
        );
      }
    }
    
    // This rule allows an admin to perform a collectionGroup query on 'messages'
    // This is required for the spam detection feature on the Admin Dashboard.
    match /{path=**}/messages/{messageId} {
        allow get, list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for personal chat metadata stored under each user.
    match /users/{userId}/personalChats/{chatId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // Flagged content can only be written by admins.
    match /flagged_content/{docId} {
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
