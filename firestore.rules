rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isUser(userId);

      // Allow users to read their own personal chat list
      match /personalChats/{chatId} {
        allow read, write: if isUser(userId);
      }
    }

    match /chats/{roomId} {
      match /messages/{messageId} {
        allow read: if (get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false) || (request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users);
        allow create: if request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users || get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false;
      }
      allow read, create: if (get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false) || (request.auth.uid in resource.data.users);
      allow update: if request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users;
    }

    match /requirements/{reqId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (resource.data.user.id == request.auth.uid || isAdmin());
    }

    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
