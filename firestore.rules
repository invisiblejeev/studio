
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Helper function to check if user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow read: if isSignedIn();
      // Users can only write to their own profile.
      allow write: if request.auth.uid == userId;
    }
    
    match /personalChats/{roomId} {
      // Users can only access chat rooms they are a member of.
      allow read, write: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
    }
    
    match /personalChats/{roomId}/messages/{messageId} {
      // Users can only read messages in chats they are a member of.
      allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
      // Users can only create messages as themselves.
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.user.id;
      // Users can only update/delete their own messages.
      allow update: if isSignedIn() && resource.data.user.id == request.auth.uid;
    }

    match /chats/{stateId} {
      // Anyone authenticated can read/write to public state chats.
      allow read, write: if isSignedIn();
    }
    
    match /chats/{stateId}/messages/{messageId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.user.id;
      allow update: if isSignedIn() && resource.data.user.id == request.auth.uid;
    }

    match /requirements/{reqId} {
        allow read, create: if isSignedIn();
        // User can update/delete if they are the author OR an admin.
        allow update, delete: if isSignedIn() && (resource.data.user.id == request.auth.uid || isAdmin());
    }

    match /offers/{offerId} {
        allow read: if isSignedIn();
        // Only admins can create, update, or delete offers.
        allow write: if isSignedIn() && isAdmin();
    }
  }
}
