rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can only read their own profile, but any authenticated user can read public-facing data (name, avatar, state).
    // Admins can read/write any user profile.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId || isAdmin();
      
      // A user can read their own personalChats subcollection
      match /personalChats/{otherUserId} {
         allow read, write: if request.auth.uid == userId;
      }
    }

    // Chat rooms
    match /chats/{roomId} {
      // Allow a user to list chats they are a part of.
      allow list: if isAuthenticated() && request.auth.uid in resource.data.users;
      // Allow read/write access to a chat room if the user is part of it or is an admin.
      allow read, write: if isAuthenticated() && (request.auth.uid in resource.data.users || isAdmin());

      // Messages within a chat room
      match /messages/{messageId} {
        // Any user in the chat room (or an admin) can read messages.
        allow read: if isAuthenticated() && (request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users || isAdmin());
        // A user can only create (write) messages if they are part of the chat room.
        allow create: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users;
        // Only admins can update or delete messages (for moderation).
        allow update, delete: if isAdmin();
      }
    }

    // Offers can be read by anyone, but only written/deleted by admins.
    match /offers/{offerId} {
      allow read: if true;
      allow write, delete: if isAdmin();
    }
    
    // Flagged content can only be accessed by admins
    match /flagged_content/{contentId} {
      allow read, write, delete: if isAdmin();
    }

    // Inappropriate logs can only be created by the system (via server-side logic which runs with admin privileges)
    // and read by admins.
    match /inappropriate_logs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Only backend can write here
    }
  }
}
