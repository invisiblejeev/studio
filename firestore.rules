rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read their own profile and other users' profiles, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Users can only read their own list of personal chats.
      match /personalChats/{otherUserId} {
        allow read: if request.auth.uid == userId;
      }
    }

    // Public requirements can be read by any authenticated user.
    // Admin can create, update, or delete.
    match /requirements/{reqId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Offers can be read by any authenticated user.
    // Admin can create, update, or delete.
    match /offers/{offerId} {
       allow read: if request.auth != null;
       allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Rules for chat rooms
    match /chats/{roomId} {
      // Allow reading the chat document itself if the user is in the `users` array (for private chats)
      // or if it's a public chat (doesn't have a `users` field).
      allow read: if request.auth != null && (
                    !exists(resource.data.users) || request.auth.uid in resource.data.users
                  );
      
      // Allow creation/update of chat metadata (like lastMessage) by authenticated users.
      // More specific rules for messages are below.
      allow write: if request.auth != null;

      // Rules for messages within a chat room
      match /messages/{messageId} {
        // Allow reads if the user can read the parent chat room.
        allow read: if get( /databases/$(database)/documents/chats/$(roomId) ).data.users == null || 
                     request.auth.uid in get( /databases/$(database)/documents/chats/$(roomId) ).data.users;

        // Allow creating a message if user is authenticated and is the sender.
        allow create: if request.auth != null && request.resource.data.user.id == request.auth.uid;
        
        // Only allow admin to update or delete messages.
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
    }

    // Only allow admin to read or write flagged content.
    match /flagged_content/{docId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}