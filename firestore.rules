
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return request.auth.uid == userId;
    }

    // Users Collection
    // - Allow users to read their own profile.
    // - Allow any authenticated user to read public profile data (needed for chat, requirements).
    // - Allow users to create their own profile upon signup.
    // - Allow users to update their own profile.
    // - Allow users to delete their own account.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isUser(userId);
      allow update, delete: if isUser(userId);
       // Personal chats list for a user
      match /personalChats/{otherUserId} {
        allow read, write: if isUser(userId);
      }
    }

    // Chats Collection (for both state and personal chats)
    match /chats/{chatId} {
        // Allow reads/writes to a chat document if the user is authenticated (for state chats)
        // or if they are one of the two users in a personal chat.
        allow read, update, delete: if isAuthenticated() && (
            (get(/databases/$(database)/documents/chats/$(chatId)).data.users == null) || // Public state chat
            (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users)  // Personal chat
        );
        allow create: if isAuthenticated();


        // Messages Subcollection
        match /messages/{messageId} {
            // Allow users to read messages in a chat they have access to.
            allow read: if isAuthenticated() && (
                (get(/databases/$(database)/documents/chats/$(chatId)).data.users == null) || // Public state chat
                (request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.users)  // Personal chat
            );

            // Allow users to write (create/update) messages if they are authenticated and it's their message.
            allow write: if isAuthenticated() && (request.resource.data.user.id == request.auth.uid);
        }
    }

    // Offers Collection
    // - Allow any authenticated user to read offers.
    // - Allow only admins to write/delete offers.
    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow write, delete: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Flagged Content (for admin training)
    // - Only admins can read or write.
    match /flagged_content/{contentId} {
        allow read, write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Inappropriate Content Logs
    // - Allow any authenticated user to create a log entry (done via server-side function).
    // - Only admins can read/delete them.
    match /inappropriate_logs/{logId} {
        allow create: if isAuthenticated();
        allow read, delete: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
