rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users
    // - Authenticated users can read any profile.
    // - Users can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Chats & Messages
    // - To read/write messages, user must be part of the chat.
    // - For public chats, any authenticated user can read/write.
    // - isPersonal is a flag on the chat doc.
    match /chats/{roomId} {
      allow read, write: if request.auth != null && (
        (resource.data.isPersonal == true && request.auth.uid in resource.data.users) ||
        (resource.data.isPersonal == false)
      );

      match /messages/{messageId} {
        allow read, write: if request.auth != null && (
          (get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == true && request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users) ||
          (get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false)
        );
      }
    }
    
    // Requirements
    // - Authenticated users can read and create requirements.
    // - Only admins can update or delete requirements.
    match /requirements/{requirementId} {
      allow get, list, create: if request.auth != null;
      allow update, delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Offers
    // - Authenticated users can read offers.
    // - Only admins can write (create, update, delete) offers.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}