
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Users can read anyone's profile (for avatars, usernames, admin status)
    // but can only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // Public chats (no '_') are open.
    // Private chats ('uid1_uid2') are restricted to members.
    match /chats/{roomId}/{any=**} {
      allow read, write: if request.auth != null && (
        !roomId.matches('^.*_.*$') ||
        request.auth.uid in roomId.split('_')
      );
    }
    
    // Requirements can be read by anyone.
    // Create is allowed for any authenticated user.
    // Update/delete is for the owner or an admin.
    match /requirements/{requirementId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        resource.data.user.id == request.auth.uid ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
      );
    }

    // Offers can be read by anyone.
    // Write access is for admins only.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
