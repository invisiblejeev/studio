
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read any profile, but can only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // A user can only read their own list of personal chats.
      match /personalChats/{otherUserId} {
        allow read: if request.auth.uid == userId;
        // Writes are handled by cloud functions/server-side logic, not clients.
        allow write: if false;
      }
    }

    // Rules for both public and private chat rooms.
    match /chats/{roomId} {
      allow read, write: if request.auth != null; // A simple rule for the chat document itself. Finer grain control is on messages.

      // Rules for messages within a chat room.
      match /messages/{messageId} {
        // Allow reading messages if:
        // 1. It's a public chat (isPersonal is false), OR
        // 2. The user is a member of the private chat's 'users' array.
        allow read: if request.auth != null && (
          get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false ||
          request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users
        );

        // Allow creating messages if the user is authenticated.
        // The message's user.id should match the authenticated user's uid.
        allow create: if request.auth != null && request.resource.data.user.id == request.auth.uid;
        
        // Only allow admins to update or delete messages.
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
    }

    // Requirements can be read by any authenticated user.
    // Writes are handled by the backend trigger, but admins can update/delete.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if false; // Only backend can create
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Offers can be read by any authenticated user.
    // Only admins can create, update, or delete offers.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
