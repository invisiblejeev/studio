
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuthOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isChatMember(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      // Allow a user to create their own profile document, and only update their own.
      allow create: if isAuthOwner(userId);
      allow update: if isAuthOwner(userId);
      allow delete: if isAuthOwner(userId);
    }
    
    match /personalChats/{roomId} {
        allow read, write: if isChatMember(roomId);
        
        match /messages/{messageId} {
            allow read, write: if isChatMember(roomId);
        }
    }

    match /chats/{stateId} {
        allow read, write: if request.auth != null;

        match /messages/{messageId} {
            allow read: if request.auth != null;
            allow create: if request.auth.uid == request.resource.data.user.id;
            allow update, delete: if request.auth.uid == resource.data.user.id;
        }
    }

    match /requirements/{reqId} {
      allow read, create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.user.id || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /flagged_content/{contentId} {
      allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
