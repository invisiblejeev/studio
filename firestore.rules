rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users: Can read any profile, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Personal Chats Subcollection: Only the user can see their own list of personal chats.
      match /personalChats/{otherUserId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Chats: Contains metadata for both public and private chat rooms.
    match /chats/{roomId} {
        // Read: Allow if it's a public chat OR if the user is a member of the private chat.
        allow read: if resource.data.isPersonal == false || request.auth.uid in resource.data.users;
        
        // Write: Allow updates (like last message timestamp) if user is part of the chat (for private)
        // or if it's a public chat where anyone can trigger an update by sending a message.
        allow write: if request.auth != null;
    }

    // Messages Subcollection: The actual chat messages.
    match /chats/{roomId}/messages/{messageId} {
        // Read: Any authenticated user can read messages. Access to the *room* is controlled
        // by the client-side logic (you only see rooms you're supposed to see).
        allow read: if request.auth != null;
        
        // Write: A user can only create a message if they are authenticated and the sender ID in the message
        // matches their own UID. This prevents users from impersonating others.
        allow create: if request.auth != null && request.resource.data.user.id == request.auth.uid;
        
        // Update/Delete: Generally, users shouldn't edit/delete messages in this app,
        // but this could be restricted to admins or the original user.
        allow update, delete: if false; 
    }

    // Requirements: Publicly readable, but only updatable/deletable by admins. Creation is server-side only.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if false; // Only cloud functions can create
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Offers: Publicly readable, but only writable by admins.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Flagged Content: Only admins can read or write.
    match /flagged_content/{contentId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
