rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only manage their own profile. Anyone can view profiles.
    match /users/{userId} {
      allow read;
      allow create, update, delete: if request.auth.uid == userId;
    }
    
    // Allow admins to query users (e.g., for user counts)
    match /users/{document=**} {
    	allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true || request.auth.uid != null;
    }

    // Public collections readable by any authenticated user.
    match /offers/{offerId} {
      allow read: if request.auth.uid != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /requirements/{reqId} {
      allow read: if request.auth.uid != null;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Secure chat rooms
    match /chats/{roomId}/{messages=**} {
      // Public state-based chats (e.g., /chats/california)
      // Any authenticated user can read/write.
      allow read, write: if request.auth.uid != null && !roomId.matches('.*_.*');
      
      // Personal chats (e.g., /chats/uid1_uid2)
      // Only the two participants can read/write.
      allow read, write: if request.auth.uid != null && request.auth.uid in roomId.split('_');
    }
    
    // Admins can perform collection group queries on messages for moderation.
    match /{path=**}/messages/{message} {
      allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Any user can manage their own personal chat list.
    match /users/{userId}/personalChats/{chatId} {
        allow read, write, delete: if request.auth.uid == userId;
    }
    
  }
}