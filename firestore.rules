rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isChatMember(roomId) {
      return request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users;
    }
    
    function isPublicChat(roomId) {
       return get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false;
    }

    // --- User Profiles ---
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isUser(userId);
      
      // Allow a user to manage their own personal chats list
      match /personalChats/{chatId} {
          allow read, write: if isUser(userId);
      }
    }

    // --- Chat Rooms and Messages ---
    match /chats/{roomId} {
      allow read, create: if isAuthenticated();
      allow update: if isAuthenticated() && (isChatMember(roomId) || isPublicChat(roomId));

      match /messages/{messageId} {
        allow read: if isAuthenticated() && (isChatMember(roomId) || isPublicChat(roomId));
        
        // Allow creating a message if the user is authenticated and the author.
        allow create: if isAuthenticated() && request.resource.data.user.id == request.auth.uid;
        
        // Allow updates only for soft deletes or edits by the original author.
        allow update: if isAuthenticated() && resource.data.user.id == request.auth.uid;
        
        // Do not allow direct client-side deletes.
        allow delete: if false;
      }
    }

    // --- Requirements ---
    match /requirements/{reqId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (resource.data.user.id == request.auth.uid || isAdmin());
    }

    // --- Offers ---
    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
