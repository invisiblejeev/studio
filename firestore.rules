
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for authentication
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read any user's public profile
      allow read: if isAuthenticated();
      
      // Only the user themselves can create or update their own profile
      allow create, update: if isAuthenticated() && request.auth.uid == userId;
      
      // Users can delete their own profile
      allow delete: if isAuthenticated() && request.auth.uid == userId;

      // Rules for the 'personalChats' subcollection within a user's document
      match /personalChats/{otherUserId} {
        // A user can only read or delete their own chat references
        allow read, delete: if isAuthenticated() && request.auth.uid == userId;
        
        // A user can create a chat reference in another user's profile,
        // but only if the document being created is for a chat they are part of.
        allow create: if isAuthenticated();
      }
    }
    
    // Rules for the 'chats' collection
    match /chats/{roomId} {
      // Allow read/write access to a chat room only if the user is a participant.
      // This covers both public state-based chats and personal chats (uid_uid).
      // For personal chats, we check if the user's UID is in the room's ID.
      // For public chats (e.g., 'california'), we allow any authenticated user to participate.
      allow read, write: if isAuthenticated() && (roomId.split('_').includes(request.auth.uid) || !roomId.includes('_'));
      
      // Rules for the 'messages' subcollection within a chat room
      match /messages/{messageId} {
        // Allow a user to read/list messages if they have access to the parent chat room.
        allow read: if isAuthenticated() && (roomId.split('_').includes(request.auth.uid) || !roomId.includes('_'));
        
        // Allow a user to create a message if they are authenticated, their UID matches the message's sender ID,
        // and they have access to the parent chat room.
        allow create: if isAuthenticated() 
                      && request.resource.data.user.id == request.auth.uid 
                      && (roomId.split('_').includes(request.auth.uid) || !roomId.includes('_'));
        
        // Only allow admins to update or delete messages.
        allow update, delete: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
    }

    // Rules for 'offers', 'flagged_content', 'inappropriate_logs'
    match /{collection}/{docId} {
      // Any authenticated user can read offers.
      allow read: if isAuthenticated() && collection == 'offers';

      // Only admins can create, update, or delete offers and manage flagged content.
      allow write: if isAuthenticated() 
                   && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true
                   && (collection == 'offers' || collection == 'flagged_content' || collection == 'inappropriate_logs');
    }
  }
}
