rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can read their own profile, and any authenticated user can read public profile info.
    // Users can only create and update their own profile.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);

      // A user can create a personal chat reference in another user's subcollection
      // only if they are one of the two parties creating the chat.
      match /personalChats/{otherUserId} {
        allow write: if isAuthenticated() && (request.auth.uid == userId || request.auth.uid == otherUserId);
        allow read: if isOwner(userId);
      }
    }

    // State-based chat rooms are public to all authenticated users.
    // Anyone authenticated can write messages. (Moderation is handled by AI flow).
    match /chats/{state} {
      allow read, write: if isAuthenticated();

      match /messages/{messageId} {
        allow read, write: if isAuthenticated();
      }
    }
    
    // Personal chat rooms (identified by user1_user2 format)
    match /chats/{roomId} {
      // Allow read/write access to the chat document itself if the user is in the `users` array
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.users;

      // Allow read/write access to messages if the user is part of the chat room
      match /messages/{messageId} {
        allow read, write: if isAuthenticated() && request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users;
      }
    }
    
    // Offers are public to read for any authenticated user.
    // Only admins can create, update, or delete offers.
    match /offers/{offerId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Admins can flag content.
    match /flagged_content/{contentId} {
      allow write: if isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
