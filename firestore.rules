
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // USERS
    // - A user can only read/write their own profile.
    // - Any authenticated user can query the collection to check for existing usernames/emails.
    // - Any authenticated user can get another user's public profile data.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update, delete: if request.auth.uid == userId;
    }

    // CHATS & MESSAGES
    // - Handles public state-based chats and private user-to-user chats.
    match /chats/{roomId}/{collection}/{docId} {
        // Allow any authenticated user to read/write to public state chat message collections.
        // Allow participants of a private chat (roomId contains '_') to read/write messages.
        allow read, write: if request.auth != null && (
                            (collection == 'messages' && roomId.split('_').length() == 1) || 
                            (collection == 'messages' && request.auth.uid in roomId.split('_'))
                           );
    }
    
    // Last message updates on the parent chat doc.
    match /chats/{roomId} {
        allow write: if request.auth != null;
    }

    // REQUIREMENTS
    // - Any authenticated user can read requirements.
    // - No one can write directly; this is handled by a trusted server trigger.
    // - Admins can update or delete.
    match /requirements/{reqId} {
      allow read: if request.auth != null;
      allow create: if false; // Block client-side creation
      allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // OFFERS
    // - Any authenticated user can read offers.
    // - Only admins can create, update, or delete offers.
    match /offers/{offerId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // FLAGGED CONTENT (Admin only)
    match /flagged_content/{contentId} {
        allow read, write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
