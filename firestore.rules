
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function isChatMember(roomId) {
      return isAuthenticated() && (
        // Public chat
        !get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal ||
        // Private chat member
        request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users
      );
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // User Profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isUser(userId);
    }

    // Chat rooms and Messages
    match /chats/{roomId} {
      allow read, create: if isAuthenticated();
      allow update: if isChatMember(roomId);

      match /messages/{messageId} {
        allow read, create: if isChatMember(roomId);
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.user.id;
      }
    }

    // Requirements
    match /requirements/{requirementId} {
      allow read, create: if isAuthenticated();
      allow update, delete: if isAuthenticated() && (isAdmin() || request.auth.uid == resource.data.user.id);
    }

    // Offers
    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
  }
}
