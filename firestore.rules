
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can only read/write their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId || isAdmin();

      // Rules for the personalChats subcollection
      match /personalChats/{otherUserId} {
        // Allow creating a chat reference if the user is part of the chat.
        // The resource.data is the data that WILL exist after the write.
        allow create: if isAuthenticated() && request.auth.uid == userId;

        // Allow reading own chat list
        allow read: if isAuthenticated() && request.auth.uid == userId;

        // No updates or deletes for now to keep it simple
        allow update, delete: if false;
      }
    }
    
    // Chat rooms
    match /chats/{roomId} {
        allow read: if isAuthenticated();
        // Allow writing to a chat room if it's a state chat and the user is an admin or belongs to that state,
        // or if it's a personal chat and the user is one of the two participants.
        allow write: if isAuthenticated() && 
                    (
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.state == roomId && !roomId.includes('_')) ||
                      (roomId.includes(request.auth.uid)) ||
                      isAdmin()
                    );
        
        match /messages/{messageId} {
            allow read: if isAuthenticated();
            // Allow creating messages if the user has write access to the parent chat room.
            allow create: if isAuthenticated() && 
                    (
                      (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.state == roomId && !roomId.includes('_')) ||
                      (roomId.includes(request.auth.uid)) ||
                      isAdmin()
                    );

            // Only admins can update/delete messages.
            allow update, delete: if isAdmin();
        }
    }

    // Offers can be read by anyone, but only modified by admins.
    match /offers/{offerId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Flagged content can be read by any authenticated user for moderation checks, but only written by admins.
    match /flagged_content/{contentId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
     // Inappropriate logs can only be created by the server-side logic (which runs with admin-like privileges) or admins, and read only by admins.
    match /inappropriate_logs/{logId} {
        allow read, write: if isAdmin();
    }
  }
}
