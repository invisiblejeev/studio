rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an administrator.
    // This checks for the existence of a document in an 'admins' collection.
    function isAdmin() {
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users can read any profile (to see avatars/names in chat),
    // but can only write to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }

    // Rules for chat rooms. Distinguishes between public and private chats.
    match /chats/{roomId} {
      // Allow reading the chat document itself if it's a public chat,
      // or if the user is a member of the private chat.
      allow get: if request.auth != null &&
                   (!('isPersonal' in resource.data) || resource.data.isPersonal == false || (resource.data.isPersonal == true && request.auth.uid in resource.data.users));

      // Allow creating/updating chat documents (e.g., for lastMessage)
      allow write: if request.auth != null;

      // Rules for messages within a chat room.
      match /messages/{messageId} {
        // Allow reading messages if it's a public chat (no underscore in roomId)
        // or if the user's UID is part of the private chat's roomId.
        allow read: if request.auth != null &&
                       (!roomId.matches('.*_.*') || request.auth.uid in roomId.split('_'));

        // Allow creating messages if authenticated.
        // Allow updating (for soft-delete) only if the user is the author.
        allow create: if request.auth != null;
        allow update: if request.auth != null && request.resource.data.user.id == request.auth.uid;
      }
    }

    // Any authenticated user can view requirements.
    // Only the author or an admin can create, update or delete.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (resource.data.user.id == request.auth.uid || isAdmin());
    }

    // Any authenticated user can view offers.
    // Only admins can create, update, or delete offers.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Admins collection is read-only for clients to prevent tampering.
    match /admins/{adminId} {
      allow read, write: if false;
    }
  }
}
