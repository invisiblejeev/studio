rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can read public profiles, but only write to their own.
    // Allow list for checking username/email availability during signup.
    match /users/{userId} {
      allow read, list;
      allow create, update, delete: if request.auth.uid == userId;
    }

    // Public collections readable by any authenticated user.
    match /requirements/{requirementId} {
        allow read;
        // Requirements are created by the server-side trigger, not clients.
        // Only admins can update or delete them.
        allow create: if false; 
        allow update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /offers/{offerId} {
        allow read;
        allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Flagged content is write-only for admins, no public reads.
    match /flagged_content/{contentId} {
        allow read, list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
        allow update, delete: if false;
    }

    // Chat documents and their message subcollections
    match /chats/{roomId} {
      // Allow read/write access to the chat document itself.
      // For private chats (with '_'), only participants can access.
      // For public chats, any authenticated user can.
      allow read, write: if request.auth != null && (roomId.split('_').length != 2 || request.auth.uid in roomId.split('_'));

      // Rules for the 'messages' subcollection within a chat
      match /messages/{messageId} {
        // For private chats, only participants can read/write.
        // For public chats, any authenticated user can read/write.
        allow read, create: if request.auth != null && (roomId.split('_').length != 2 || request.auth.uid in roomId.split('_'));
        
        // Only the message author or an admin can delete a message.
        // Updates are disallowed for now to maintain message integrity.
        allow update: if false;
        allow delete: if request.auth.uid == resource.data.user.id || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      }
    }
    
    // Admins need collectionGroup access to query all messages for spam.
    match /{path=**}/messages/{messageId} {
        allow list: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Personal chat list subcollection under users
    match /users/{userId}/personalChats/{chatId} {
      allow read, list, write: if request.auth.uid == userId;
    }
  }
}
