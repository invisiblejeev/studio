
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users Collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isUser(userId);
      
      // Personal chat metadata subcollection
      match /personalChats/{otherUserId} {
        allow read, write: if isUser(userId);
      }
    }
    
    // Public Chat Rooms (keyed by state)
    match /chats/{state} {
      allow read: if isSignedIn();
      allow write: if isSignedIn(); // For creating last message, etc.

      match /messages/{messageId} {
        allow read: if isSignedIn();
        allow create: if isSignedIn() && request.resource.data.user.id == request.auth.uid;
        allow update, delete: if isSignedIn() && resource.data.user.id == request.auth.uid;
      }
    }
    
    // Personal Chat Rooms (keyed by user1Id_user2Id)
    match /personalChats/{roomId} {
      // Room metadata can be read/written by members only
      allow read, write: if isSignedIn() && request.auth.uid in resource.data.members;

      match /messages/{messageId} {
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
        allow create: if isSignedIn() && request.resource.data.user.id == request.auth.uid && request.auth.uid in get(/databases/$(database)/documents/personalChats/$(roomId)).data.members;
        allow update, delete: if isSignedIn() && resource.data.user.id == request.auth.uid;
      }
    }

    // Requirements Collection
    match /requirements/{reqId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && (resource.data.user.id == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // Offers Collection
    match /offers/{offerId} {
        allow read: if isSignedIn();
        allow write: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Fallback security rule
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
