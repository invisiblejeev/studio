
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users Collection
    // - Allow users to read any profile (for profile viewing).
    // - Allow users to write ONLY to their own profile.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    // Personal Chats Subcollection (under users)
    // - A user can only see the list of their own personal chats.
    match /users/{userId}/personalChats/{otherUserId} {
        allow read, write: if request.auth.uid == userId;
    }
    
    // Messages Subcollection (under chats)
    // - A user can read messages if the chat is public OR they are a member of the private chat.
    // - A user can only write messages if they are authenticated.
    match /chats/{roomId}/messages/{messageId} {
        allow read: if request.auth != null && (
            get(/databases/$(database)/documents/chats/$(roomId)).data.isPersonal == false ||
            request.auth.uid in get(/databases/$(database)/documents/chats/$(roomId)).data.users
        );
        allow write: if request.auth != null;
    }
    
    // Chats Collection
    // - Only allow reads/writes if the user is part of the chat (for private chats).
    // - Public chats (isPersonal == false) should not be directly written to by clients this way.
    match /chats/{roomId} {
        allow read, write: if request.auth.uid in resource.data.users;
    }

    // Requirements Collection
    // - Allow any authenticated user to read all requirements.
    // - Only allow admins to create, update, or delete requirements.
    match /requirements/{requirementId} {
      allow read: if request.auth != null;
      allow create, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Offers Collection
    // - Allow any authenticated user to read all offers.
    // - Only allow admins to write/delete offers.
    match /offers/{offerId} {
      allow read: if request.auth != null;
      allow write, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
