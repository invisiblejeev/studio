rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // In a real production app, use custom claims.
      // For this app, checking an 'admins' collection is a secure pattern.
      return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // User profiles can be read by anyone authenticated, but only written by the owner.
    match /users/{userId} {
      allow read: if isAuth();
      allow write: if isOwner(userId);

      // Personal chat list under each user
      match /personalChats/{otherUserId} {
        allow read, write: if isOwner(userId);
      }
    }
    
    // Admins collection is read-only for clients.
    match /admins/{userId} {
      allow read: if isAuth();
      allow write: if false; // Only allow server-side/console writes
    }

    match /chats/{roomId} {
      // CHAT METADATA (e.g., last message)
      // Anyone authenticated can create/update chat metadata.
      // Reading is controlled by the message rules below.
      allow read, create, update: if isAuth();

      // MESSAGES SUBCOLLECTION
      match /messages/{messageId} {
        // PUBLIC CHATS (e.g., 'california') - roomId does not contain '_'
        allow read, write: if isAuth() && !roomId.matches('.*_.*');
        
        // PRIVATE CHATS (e.g., 'uid1_uid2') - roomId contains '_'
        allow read, write: if isAuth() && roomId.matches('.*_.*') && request.auth.uid in roomId.split('_');
      }
    }

    // Requirements can be read/created by any authenticated user.
    // Only the author or an admin can update/delete.
    match /requirements/{requirementId} {
      allow read, create: if isAuth();
      allow update, delete: if isAuth() && (resource.data.user.id == request.auth.uid || isAdmin());
    }

    // Offers can be read by anyone, but only written by an admin.
    match /offers/{offerId} {
      allow read: if isAuth();
      allow write: if isAdmin();
    }
  }
}