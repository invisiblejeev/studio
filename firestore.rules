rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is authenticated
    function isAuth() {
      return request.auth != null;
    }

    // Helper function to check if the user is a member of a specific personal chat room
    function isPersonalChatMember(roomId) {
      return isAuth() && get(/databases/$(database)/documents/personalChats/$(roomId)).data.members[0] == request.auth.uid || 
             get(/databases/$(database)/documents/personalChats/$(roomId)).data.members[1] == request.auth.uid;
    }

    // Rules for user profiles
    match /users/{userId} {
      // Anyone can read a user profile
      allow read: if isAuth();
      // Only the user themselves can update their profile
      allow write: if isAuth() && request.auth.uid == userId;

      // Rules for the personalChats subcollection within a user's document
      match /personalChats/{otherUserId} {
         // A user can only manage their own list of personal chats
         allow read, write, delete: if isAuth() && request.auth.uid == userId;
      }
    }

    // Rules for public chat rooms
    match /chats/{roomId} {
        // Any authenticated user can read the chat room document
        allow read: if isAuth();
        // Any authenticated user can create or update the last message info
        allow write: if isAuth();

        // Rules for messages within a public chat room
        match /messages/{messageId} {
            // Any authenticated user can read messages
            allow read: if isAuth();
            // A user can create a message if they are authenticated
            allow create: if isAuth();
            // A user can update/delete their own message
            allow update, delete: if isAuth() && resource.data.user.id == request.auth.uid;
        }
    }
    
    // Rules for personal chat rooms
    match /personalChats/{roomId} {
        // Allow read/write access to the chat document only if the user is a member
        allow read, write: if isPersonalChatMember(roomId);
        
        // Rules for messages within a personal chat room
        match /messages/{messageId} {
            // A user can read messages only if they are a member of the chat
            allow read: if isPersonalChatMember(roomId);
            // A user can create a message only if they are a member of the chat
            allow create: if isPersonalChatMember(roomId);
            // A user can update/delete their own message
            allow update, delete: if isAuth() && resource.data.user.id == request.auth.uid;
        }
    }

    // Rules for requirements
    match /requirements/{requirementId} {
      allow read: if isAuth();
      // Allow create if user is authenticated
      allow create: if isAuth();
      // Allow update/delete if user is the author or an admin
      allow update, delete: if isAuth() && (resource.data.user.id == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
    }
    
    // Rules for offers
    match /offers/{offerId} {
        allow read: if isAuth();
        // Only admins can write/create/delete offers
        allow write: if isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
  }
}
